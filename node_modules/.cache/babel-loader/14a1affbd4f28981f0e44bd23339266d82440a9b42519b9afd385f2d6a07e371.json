{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_post_card = _resolveComponent(\"post-card\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  const _component_v_main = _resolveComponent(\"v-main\");\n  return _openBlock(), _createBlock(_component_v_main, {\n    class: \"bg-grey-lighten-3\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_container, null, {\n      default: _withCtx(() => [_createVNode(_component_post_card, {\n        title: _ctx.post.title,\n        description: _ctx.post.description,\n        \"main-content\": _ctx.post.mainContent\n      }, null, 8 /* PROPS */, [\"title\", \"description\", \"main-content\"]), _createTextVNode(\" Страница \" + _toDisplayString(_ctx.$route.params.id), 1 /* TEXT */)]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_main","class","_createVNode","_component_v_container","_component_post_card","title","_ctx","post","description","mainContent","_toDisplayString","$route","params","id"],"sources":["C:\\Users\\Feed\\Documents\\naturesec\\front\\nature-front\\src\\views\\PostView.vue"],"sourcesContent":["<template>\r\n  <v-main class=\"bg-grey-lighten-3\">\r\n    <v-container>\r\n      <post-card\r\n          :title=\"post.title\"\r\n          :description=\"post.description\"\r\n          :main-content=\"post.mainContent\"\r\n\r\n\r\n      >\r\n\r\n      </post-card>\r\n\r\n      Страница {{$route.params.id}}\r\n\r\n    </v-container>\r\n  </v-main>\r\n\r\n\r\n\r\n\r\n\r\n\r\n</template>\r\n\r\n<script>\r\nimport {mapActions, mapGetters,} from \"vuex\";\r\nimport PostCard from \"@/components/PostCard.vue\";\r\n\r\n\r\n export default {\r\n   components:{\r\n     PostCard\r\n   },\r\n  mounted() {\r\n    this.fetchPost(this.$route.params.id);\r\n  },\r\n  computed:{\r\n    ...mapGetters({\r\n      post: 'post'\r\n\r\n    }),\r\n  },\r\n  methods:{\r\n    ...mapActions({\r\n      fetchPost:'fetchPost',\r\n    }),\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n</style>"],"mappings":";;;;;uBACEA,YAAA,CAeSC,iBAAA;IAfDC,KAAK,EAAC;EAAmB;sBAC/B,MAac,CAbdC,YAAA,CAacC,sBAAA;wBAZZ,MAQY,CARZD,YAAA,CAQYE,oBAAA;QAPPC,KAAK,EAAEC,IAAA,CAAAC,IAAI,CAACF,KAAK;QACjBG,WAAW,EAAEF,IAAA,CAAAC,IAAI,CAACC,WAAW;QAC7B,cAAY,EAAEF,IAAA,CAAAC,IAAI,CAACE;0FAKZ,YAEH,GAAAC,gBAAA,CAAEJ,IAAA,CAAAK,MAAM,CAACC,MAAM,CAACC,EAAE,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}